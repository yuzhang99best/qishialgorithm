class Solution(object):
    def permute(self, nums):
        visited = []
        result = []
        self.backtracking(result,visited,[],nums)
        return result
    def backtracking(self,result,visited,subset,nums):
        if len(subset) == len(nums):
            result.append(subset)
        for i in range(len(nums)):
            if i not in visited:
                visited.append(i)
                self.backtracking(result,visited,subset+[nums[i]],nums)
                visited.remove(i)
